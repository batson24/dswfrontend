{"ast":null,"code":"var _jsxFileName = \"/Users/batson24/Desktop/Date_Site/frontend/src/Components/NewPost.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport auth from '../Components/authenticator';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { create } from './api-post.js';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#efefef',\n    padding: `${theme.spacing(3)}px 0px 1px`\n  },\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    marginBottom: theme.spacing(3),\n    backgroundColor: 'rgba(65, 150, 136, 0.09)',\n    boxShadow: 'none'\n  },\n  cardContent: {\n    backgroundColor: 'white',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  cardHeader: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  photoButton: {\n    height: 30,\n    marginBottom: 5\n  },\n  input: {\n    display: 'none'\n  },\n  textField: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    width: '90%'\n  },\n  submit: {\n    margin: theme.spacing(2)\n  },\n  filename: {\n    verticalAlign: 'super'\n  }\n}));\nexport default function NewPost(props) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    text: '',\n    photo: '',\n    error: '',\n    user: {}\n  });\n  const jwt = auth.isAuthenticated();\n  useEffect(() => {\n    setValues({ ...values,\n      user: auth.isAuthenticated().user\n    });\n  }, []);\n\n  const clickPost = () => {\n    let postData = new FormData();\n    postData.append('text', values.text);\n    postData.append('photo', values.photo);\n    create({\n      userId: jwt.user._id\n    }, {\n      t: jwt.token\n    }, postData).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          text: '',\n          photo: ''\n        });\n        props.addUpdate(data);\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = name === 'photo' ? event.target.files[0] : event.target.value;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const photoURL = values.user._id ? '/api/users/photo/' + values.user._id : '/api/users/defaultphoto';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: photoURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }),\n    title: values.user.name,\n    className: classes.cardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"Share your thoughts ...\",\n    multiline: true,\n    rows: \"3\",\n    value: values.text,\n    onChange: handleChange('text'),\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    onChange: handleChange('photo'),\n    className: classes.input,\n    id: \"icon-button-file\",\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"secondary\",\n    className: classes.photoButton,\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PhotoCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }))), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.filename,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 18\n    }\n  }, values.photo ? values.photo.name : ''), values.error && /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"error\"), values.error)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    disabled: values.text === '',\n    onClick: clickPost,\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"POST\"))));\n}\nNewPost.propTypes = {\n  addUpdate: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/batson24/Desktop/Date_Site/frontend/src/Components/NewPost.jsx"],"names":["React","useState","useEffect","auth","Card","CardHeader","CardContent","CardActions","Button","TextField","Typography","Avatar","Icon","PropTypes","makeStyles","create","IconButton","PhotoCamera","useStyles","theme","root","backgroundColor","padding","spacing","card","maxWidth","margin","marginBottom","boxShadow","cardContent","paddingTop","paddingBottom","cardHeader","photoButton","height","input","display","textField","marginLeft","marginRight","width","submit","filename","verticalAlign","NewPost","props","classes","values","setValues","text","photo","error","user","jwt","isAuthenticated","clickPost","postData","FormData","append","userId","_id","t","token","then","data","addUpdate","handleChange","name","event","value","target","files","photoURL","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport auth from '../Components/authenticator'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport Icon from '@material-ui/core/Icon'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {create} from './api-post.js'\nimport IconButton from '@material-ui/core/IconButton'\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#efefef',\n    padding: `${theme.spacing(3)}px 0px 1px`\n  },\n  card: {\n    maxWidth:600,\n    margin: 'auto',\n    marginBottom: theme.spacing(3),\n    backgroundColor: 'rgba(65, 150, 136, 0.09)',\n    boxShadow: 'none'\n  },\n  cardContent: {\n    backgroundColor: 'white',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  cardHeader: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  photoButton: {\n    height: 30,\n    marginBottom: 5\n  },\n  input: {\n    display: 'none',\n  },\n  textField: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    width: '90%'\n  },\n  submit: {\n    margin: theme.spacing(2)\n  },\n  filename:{\n    verticalAlign: 'super'\n  }\n}))\n\nexport default function NewPost (props){\n  const classes = useStyles()\n  const [values, setValues] = useState({\n    text: '',\n    photo: '',\n    error: '',\n    user: {}\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    setValues({...values, user: auth.isAuthenticated().user})\n  }, [])\n  const clickPost = () => {\n    let postData = new FormData()\n    postData.append('text', values.text)\n    postData.append('photo', values.photo)\n    create({\n      userId: jwt.user._id\n    }, {\n      t: jwt.token\n    }, postData).then((data) => {\n      if (data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, text:'', photo: ''})\n        props.addUpdate(data)\n      }\n    })\n  }\n  const handleChange = name => event => {\n    const value = name === 'photo'\n      ? event.target.files[0]\n      : event.target.value\n    setValues({...values, [name]: value })\n  }\n  const photoURL = values.user._id ?'/api/users/photo/'+ values.user._id : '/api/users/defaultphoto'\n    return (<div className={classes.root}>\n      <Card className={classes.card}>\n      <CardHeader\n            avatar={\n              <Avatar src={photoURL}/>\n            }\n            title={values.user.name}\n            className={classes.cardHeader}\n          />\n      <CardContent className={classes.cardContent}>\n        <TextField\n            placeholder=\"Share your thoughts ...\"\n            multiline\n            rows=\"3\"\n            value={values.text}\n            onChange={handleChange('text')}\n            className={classes.textField}\n            margin=\"normal\"\n        />\n        <input accept=\"image/*\" onChange={handleChange('photo')} className={classes.input} id=\"icon-button-file\" type=\"file\" />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton color=\"secondary\" className={classes.photoButton} component=\"span\">\n            <PhotoCamera />\n          </IconButton>\n        </label> <span className={classes.filename}>{values.photo ? values.photo.name : ''}</span>\n        { values.error && (<Typography component=\"p\" color=\"error\">\n            <Icon color=\"error\" className={classes.error}>error</Icon>\n              {values.error}\n            </Typography>)\n        }\n      </CardContent>\n      <CardActions>\n        <Button color=\"primary\" variant=\"contained\" disabled={values.text === ''} onClick={clickPost} className={classes.submit}>POST</Button>\n      </CardActions>\n    </Card>\n  </div>)\n\n}\n\nNewPost.propTypes = {\n  addUpdate: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}