{"ast":null,"code":"var _jsxFileName = \"/Users/batson24/Desktop/Date_Site/frontend/src/Routes/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../../Components/InfoBar/InfoBar.jsx';\nimport Input from '../../Components/Input/Input.jsx';\nimport MessageList from '../../Components/MessageList.jsx';\nimport TextContainer from '../../Components/Textcontainer/TextContainer';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:3000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(MessageList, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(TextContainer, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/batson24/Desktop/Date_Site/frontend/src/Routes/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","MessageList","TextContainer","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","on","sendMessage","event","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AAEA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMqB,QAAQ,GAAG,gBAAjB;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEU,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBX,WAAW,CAACoB,KAAZ,CAAkBZ,QAAQ,CAACa,MAA3B,CAAvB;AAEAf,IAAAA,MAAM,GAAGL,EAAE,CAACkB,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACgB,IAAP,CAAY,MAAZ,EAAoB;AAAEb,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCY,KAAD,IAAW;AAC7C,UAAGA,KAAH,EAAU;AACRC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAKD,GAbQ,EAaN,CAACJ,QAAD,EAAWX,QAAQ,CAACa,MAApB,CAbM,CAAT;AAeAtB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqBV,OAAO,IAAI;AAC9BG,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAE,GAAGA,QAAL,EAAeF,OAAf,CAAb,CAAX;AACD,KAFD;AAIAT,IAAAA,MAAM,CAACmB,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEZ,MAAAA;AAAF,KAAD,KAAe;AACnCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAGH,GARU,EAQR,EARQ,CAAT;;AAUA,QAAMa,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGb,OAAH,EAAY;AACVT,MAAAA,MAAM,CAACgB,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GAND;;AAOA,sBACD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEL,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEM,QAAvB;AAAiC,IAAA,IAAI,EAAER,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEM,OAAhB;AAAyB,IAAA,UAAU,EAAEC,UAArC;AAAiD,IAAA,WAAW,EAAEU,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAHJ,eAcQ,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdR,CADC;AAkBH,CA1DD;;AA4DA,eAAeN,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport queryString from 'query-string'\nimport io from 'socket.io-client'\nimport './Chat.css'\nimport InfoBar from '../../Components/InfoBar/InfoBar.jsx'\nimport Input from '../../Components/Input/Input.jsx'\nimport MessageList from '../../Components/MessageList.jsx'\nimport TextContainer from '../../Components/Textcontainer/TextContainer'\n\nlet socket;\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'localhost:3000';\n  \n    useEffect(() => {\n      const { name, room } = queryString.parse(location.search);\n  \n      socket = io(ENDPOINT);\n  \n      setRoom(room);\n      setName(name)\n  \n      socket.emit('join', { name, room }, (error) => {\n        if(error) {\n          alert(error);\n        }\n      });\n    }, [ENDPOINT, location.search]);\n    \n    useEffect(() => {\n      socket.on('message', message => {\n        setMessages(messages => [ ...messages, message ]);\n      });\n      \n      socket.on(\"roomData\", ({ users }) => {\n        setUsers(users);\n      });\n  }, []);\n  \n    const sendMessage = (event) => {\n      event.preventDefault();\n  \n      if(message) {\n        socket.emit('sendMessage', message, () => setMessage(''));\n      }\n    }\n    return(\n   <div className='outerContainer'>\n\n      \n       <div className='container'>\n\n       <InfoBar room={room}/>\n       <MessageList messages={messages} name={name}/>\n       <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n      \n\n           {/* <input value={message} onChange={(event)=> setMessage(event.target.value)}\n           onKeyPress={event=> event.key === 'Enter'? sendMessage(event): null}/> */}\n\n       </div> \n           <TextContainer users={users}/>\n   </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}