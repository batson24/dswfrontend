{"ast":null,"code":"var Personalization = function Personalization() {\n  /**\n   * Manage api calls for personalization\n   * The collection object contains convenience functions such as  get, post, delete\n   * @class Personalization\n   */\n  this.initialize.apply(this, arguments);\n};\n\nPersonalization.prototype = {\n  /**\n   * Initialize the Personalization object\n   *\n   * @method intialize\n   * @memberof Personalization.prototype\n   * @param {StreamClient} client - The stream client\n   */\n  initialize: function initialize(client) {\n    this.client = client;\n  },\n  get: function get(resource, options, callback) {\n    /**\n     * Get personalized activities for this feed\n     *\n     * @method get\n     * @memberof Personalization.prototype\n     * @param {object} resource - personalized resource endpoint i.e \"follow_recommendations\"\n     * @param {object} options  Additional options\n     * @param {requestCallback} callback - Callback to call on completion\n     * @return {Promise} Promise object. Personalized feed\n     * @example client.personalization.get('follow_recommendations', {foo: 'bar', baz: 'qux'}, cb)\n     */\n    var last = arguments[arguments.length - 1]; // callback is always the last argument\n\n    callback = last.call ? last : undefined;\n\n    if (!options || options.call) {\n      options = {};\n    }\n\n    return this.client.get({\n      url: resource + '/',\n      serviceName: 'personalization',\n      qs: options,\n      signature: options.token || this.client.getPersonalizationToken()\n    }, callback);\n  },\n  post: function post(resource, options, data, callback) {\n    /**\n     * Post data to personalization endpoint\n     *\n     * @method post\n     * @memberof Personalization.prototype\n     * @param {object} resource - personalized resource endpoint i.e \"follow_recommendations\"\n     * @param {object} options - Additional options\n     * @param {object} data - Data to send in the payload\n     * @param {requestCallback} callback - Callback to call on completion\n     * @return {Promise} Promise object. Data that was posted if successful, or an error.\n     * @example client.personalization.post('follow_recommendations', {foo: 'bar', baz: 'qux'}, cb)\n     */\n    var last = arguments[arguments.length - 1]; // callback is always the last argument\n\n    callback = last.call ? last : undefined;\n\n    if (!options || options.call) {\n      options = {};\n    }\n\n    if (!data || data.call) {\n      data = {};\n    }\n\n    return this.client.post({\n      url: resource + '/',\n      serviceName: 'personalization',\n      qs: options,\n      body: data,\n      signature: this.client.getPersonalizationToken()\n    }, callback);\n  },\n  delete: function _delete(resource, options, callback) {\n    /**\n     * Delete metadata or activities\n     *\n     * @method delete\n     * @memberof Personalization.prototype\n     * @param {object} resource - personalized resource endpoint i.e \"follow_recommendations\"\n     * @param {object} options - Additional options\n     * @param {requestCallback} callback - Callback to call on completion\n     * @return {Promise} Promise object. Data that was deleted if successful, or an error.\n     * @example client.personalization.delete('follow_recommendations', {foo: 'bar', baz: 'qux'}, cb)\n     */\n    var last = arguments[arguments.length - 1]; // callback is always the last argument\n\n    callback = last.call ? last : undefined;\n\n    if (!options || options.call) {\n      options = {};\n    }\n\n    return this.client.delete({\n      url: resource + '/',\n      serviceName: 'personalization',\n      qs: options,\n      signature: this.client.getPersonalizationToken()\n    }, callback);\n  }\n};\nmodule.exports = Personalization;","map":{"version":3,"sources":["/Users/batson24/Desktop/Date_Site/frontend/node_modules/getstream/lib/lib/personalization.js"],"names":["Personalization","initialize","apply","arguments","prototype","client","get","resource","options","callback","last","length","call","undefined","url","serviceName","qs","signature","token","getPersonalizationToken","post","data","body","delete","_delete","module","exports"],"mappings":"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","sourcesContent":["var Personalization = function Personalization() {\n  /**\n   * Manage api calls for personalization\n   * The collection object contains convenience functions such as  get, post, delete\n   * @class Personalization\n   */\n  this.initialize.apply(this, arguments);\n};\n\nPersonalization.prototype = {\n  /**\n   * Initialize the Personalization object\n   *\n   * @method intialize\n   * @memberof Personalization.prototype\n   * @param {StreamClient} client - The stream client\n   */\n  initialize: function initialize(client) {\n    this.client = client;\n  },\n  get: function get(resource, options, callback) {\n    /**\n     * Get personalized activities for this feed\n     *\n     * @method get\n     * @memberof Personalization.prototype\n     * @param {object} resource - personalized resource endpoint i.e \"follow_recommendations\"\n     * @param {object} options  Additional options\n     * @param {requestCallback} callback - Callback to call on completion\n     * @return {Promise} Promise object. Personalized feed\n     * @example client.personalization.get('follow_recommendations', {foo: 'bar', baz: 'qux'}, cb)\n     */\n    var last = arguments[arguments.length - 1]; // callback is always the last argument\n\n    callback = last.call ? last : undefined;\n\n    if (!options || options.call) {\n      options = {};\n    }\n\n    return this.client.get({\n      url: resource + '/',\n      serviceName: 'personalization',\n      qs: options,\n      signature: options.token || this.client.getPersonalizationToken()\n    }, callback);\n  },\n  post: function post(resource, options, data, callback) {\n    /**\n     * Post data to personalization endpoint\n     *\n     * @method post\n     * @memberof Personalization.prototype\n     * @param {object} resource - personalized resource endpoint i.e \"follow_recommendations\"\n     * @param {object} options - Additional options\n     * @param {object} data - Data to send in the payload\n     * @param {requestCallback} callback - Callback to call on completion\n     * @return {Promise} Promise object. Data that was posted if successful, or an error.\n     * @example client.personalization.post('follow_recommendations', {foo: 'bar', baz: 'qux'}, cb)\n     */\n    var last = arguments[arguments.length - 1]; // callback is always the last argument\n\n    callback = last.call ? last : undefined;\n\n    if (!options || options.call) {\n      options = {};\n    }\n\n    if (!data || data.call) {\n      data = {};\n    }\n\n    return this.client.post({\n      url: resource + '/',\n      serviceName: 'personalization',\n      qs: options,\n      body: data,\n      signature: this.client.getPersonalizationToken()\n    }, callback);\n  },\n  delete: function _delete(resource, options, callback) {\n    /**\n     * Delete metadata or activities\n     *\n     * @method delete\n     * @memberof Personalization.prototype\n     * @param {object} resource - personalized resource endpoint i.e \"follow_recommendations\"\n     * @param {object} options - Additional options\n     * @param {requestCallback} callback - Callback to call on completion\n     * @return {Promise} Promise object. Data that was deleted if successful, or an error.\n     * @example client.personalization.delete('follow_recommendations', {foo: 'bar', baz: 'qux'}, cb)\n     */\n    var last = arguments[arguments.length - 1]; // callback is always the last argument\n\n    callback = last.call ? last : undefined;\n\n    if (!options || options.call) {\n      options = {};\n    }\n\n    return this.client.delete({\n      url: resource + '/',\n      serviceName: 'personalization',\n      qs: options,\n      signature: this.client.getPersonalizationToken()\n    }, callback);\n  }\n};\nmodule.exports = Personalization;"]},"metadata":{},"sourceType":"script"}