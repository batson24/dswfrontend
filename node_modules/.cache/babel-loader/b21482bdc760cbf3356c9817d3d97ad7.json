{"ast":null,"code":"// import React, {useState, useEffect} from 'react'\n// import queryString from 'query-string'\n// import io from 'socket.io-client'\n// import './Chat.css'\n// import InfoBar from '../../Components/InfoBar/InfoBar.jsx'\n// import Input from '../../Components/Input/Input.jsx'\n// import MessageList from '../../Components/MessageList.jsx'\n// import TextContainer from '../../Components/Textcontainer/TextContainer'\n// let socket;\n// let Chat=({location})=>{\n//     let [name, setName]= useState('')\n//     let [room, setRoom]= useState('')\n//     let [users, setUsers] = useState('');\n//     let [message, setMessage]=useState('')\n//     let [messages, setMessages]=useState([])\n//     let ENDPOINT='localhost:3003'\n//     useEffect(()=>{\n//         let {name,room} = queryString.parse(location.search)\n//         socket=io(ENDPOINT)\n//         setName(name)\n//         setRoom(room)\n//         socket.emit('join', {name, room}, ()=>{\n//         })\n//         return ()=> {\n//             socket.emit('disconnect')\n//             socket.off()\n//         }\n//     }, [ENDPOINT, location.search])\n//     useEffect(()=>{\n//         socket.on('message',(message=>{\n//             setMessages([...setMessages, message])\n//         })\n//     }, [messages])\n//     let sendMessage=(event)=>{\n//         event.preventDefault()\n//         if(message){\n//             socket.emit('sendMessage', message, ()=>setMessage(''))\n//         }\n//     }\n//     return(\n//    <div className='outerContainer'>\n//        <div className='container'>\n//        <InfoBar room={room}/>\n//        <MessageList messages={messages} name={name}/>\n//        <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n//            {/* <input value={message} onChange={(event)=> setMessage(event.target.value)}\n//            onKeyPress={event=> event.key === 'Enter'? sendMessage(event): null}/> */}\n//        </div> \n//            <TextContainer users={users}/>\n//    </div>\n//     )\n// }\n// export default Chat","map":{"version":3,"sources":["/Users/batson24/Desktop/Date_Site/frontend/src/Routes/Chat/Chat.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, {useState, useEffect} from 'react'\n// import queryString from 'query-string'\n// import io from 'socket.io-client'\n// import './Chat.css'\n// import InfoBar from '../../Components/InfoBar/InfoBar.jsx'\n// import Input from '../../Components/Input/Input.jsx'\n// import MessageList from '../../Components/MessageList.jsx'\n// import TextContainer from '../../Components/Textcontainer/TextContainer'\n\n// let socket;\n// let Chat=({location})=>{\n//     let [name, setName]= useState('')\n//     let [room, setRoom]= useState('')\n//     let [users, setUsers] = useState('');\n//     let [message, setMessage]=useState('')\n//     let [messages, setMessages]=useState([])\n//     let ENDPOINT='localhost:3003'\n//     useEffect(()=>{\n//         let {name,room} = queryString.parse(location.search)\n\n//         socket=io(ENDPOINT)\n//         setName(name)\n//         setRoom(room)\n//         socket.emit('join', {name, room}, ()=>{\n          \n//         })\n\n//         return ()=> {\n//             socket.emit('disconnect')\n//             socket.off()\n//         }\n//     }, [ENDPOINT, location.search])\n\n//     useEffect(()=>{\n//         socket.on('message',(message=>{\n//             setMessages([...setMessages, message])\n\n//         })\n//     }, [messages])\n\n//     let sendMessage=(event)=>{\n//         event.preventDefault()\n//         if(message){\n//             socket.emit('sendMessage', message, ()=>setMessage(''))\n//         }\n//     }\n   \n//     return(\n//    <div className='outerContainer'>\n\n      \n//        <div className='container'>\n\n//        <InfoBar room={room}/>\n//        <MessageList messages={messages} name={name}/>\n//        <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n      \n\n//            {/* <input value={message} onChange={(event)=> setMessage(event.target.value)}\n//            onKeyPress={event=> event.key === 'Enter'? sendMessage(event): null}/> */}\n\n//        </div> \n//            <TextContainer users={users}/>\n//    </div>\n//     )\n// }\n\n// export default Chat"]},"metadata":{},"sourceType":"module"}