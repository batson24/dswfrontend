{"ast":null,"code":"var _jsxFileName = \"/Users/batson24/Desktop/Date_Site/frontend/src/Routes/Room.js\";\nimport React, { useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nlet Room = props => {\n  let userVideo = useRef();\n  let partnerVideo = useRef();\n  let peerRef = useRef();\n  let socketRef = useRef();\n  let otherUser = useRef();\n  let userStream = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).then(stream => {\n      userVideo.current.srcObject = streamuserStream.current = stream;\n      socketRef.current = io.connect('/');\n      socketRef.current.emit('join room', props.match.params.roomID);\n      socketRef.current.on('other user', userID => {\n        callUser.current = userID;\n      });\n    });\n    socketRef.current.on('user joined', userID => {\n      otherUser.current = userID;\n    });\n    socketRef.current.on('offer', handleRecieveCall);\n    socketRef.current.on('answer', handleAnswer);\n    socketRef.current.on('ice-candidate', handleNewICECandidateMsg);\n  }, []);\n\n  function callUser(userID) {\n    peerRef.current = createPeer(userID);\n    userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n  }\n\n  function createPeer(userID) {\n    let peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.stunprotocol.org'\n      }, {\n        urls: 'trun:numb.viagenie.ca',\n        credential: 'muazkh',\n        username: 'webrtc@live.com'\n      }]\n    });\n    peer.onicecandidate = handleICECandidateEvent;\n    peer.ontrack = handleTrackEvent;\n\n    peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n    return peer;\n  }\n\n  function handleNegotiationNeededEvent(userID) {\n    peerRef.current.createOffer().then(offer => {\n      return peerRef.current.setLocalDescription(offer);\n    }).then(() => {\n      let payload = {\n        target: userID,\n        caller: socketRef.current.id,\n        sdp: peerRef.current.localDecscription\n      };\n      socketRef.current.emit('offer', payload);\n    }).catch(e => console.log(e));\n  }\n\n  function handleRecieveCall(incoming) {\n    peerRef.current = createPeer();\n    let desc = new RTCSessionDescription(incoming.sdp);\n    peerRef.current.setRemoteDescription(desc).then(() => {\n      userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n    }).then(() => {\n      return peerRef.current.createAnswer();\n    }).then(answer => {\n      return peerRef.current.setLocalDescription(answer);\n    }).then(() => {\n      let payload = {\n        target: incoming.caller,\n        caller: socketRef.current.id,\n        sdp: peerRef.current.localDescription\n      };\n      socketRef.current.emit('answer', payload);\n    });\n  }\n\n  function handleAnswer(message) {\n    let desc = new RTCSessionDescription(message.sdp);\n    peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n  }\n\n  function handleICECandidateEvent(e) {\n    if (e.candidate) {\n      let payload = {\n        target: otherUser.current,\n        candidate: e.candidate\n      };\n      socketRef.current.emit('ice-candidate', payload);\n    }\n  }\n\n  function handleNewICECandidateMsg(incoming) {\n    let candidate = new RTCIceCandidate(incoming);\n    peerRef.current.addIceCandidate(candidate).catch(e => console.log(e));\n  }\n\n  function handleTrackEvent(e) {\n    partnerVideo.current.srcObject = e.streams[0];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/batson24/Desktop/Date_Site/frontend/src/Routes/Room.js"],"names":["React","useRef","useEffect","io","Room","props","userVideo","partnerVideo","peerRef","socketRef","otherUser","userStream","navigator","mediaDevices","getUserMedia","audio","video","then","stream","current","srcObject","streamuserStream","connect","emit","match","params","roomID","on","userID","callUser","handleRecieveCall","handleAnswer","handleNewICECandidateMsg","createPeer","getTracks","forEach","track","addTrack","peer","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","handleTrackEvent","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","offer","setLocalDescription","payload","target","caller","id","sdp","localDecscription","catch","e","console","log","incoming","desc","RTCSessionDescription","setRemoteDescription","createAnswer","answer","localDescription","message","candidate","RTCIceCandidate","addIceCandidate","streams"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react'\nimport io from 'socket.io-client'\n\nlet Room = (props)=>{\n    let userVideo=useRef()\n    let partnerVideo = useRef()\n    let peerRef = useRef()\n    let socketRef= useRef()\n    let otherUser= useRef()\n    let userStream= useRef()\n\n    useEffect(() =>{\n        navigator.mediaDevices.getUserMedia({audio:true, video:true}).then(stream=>{\n            userVideo.current.srcObject=streamuserStream.current=stream\n\n            socketRef.current = io.connect('/')\n            socketRef.current.emit('join room', props.match.params.roomID)\n            socketRef.current.on('other user', userID=>{\n                callUser.current=userID;\n            })\n        })\n        socketRef.current.on('user joined', userID=>{\n            otherUser.current=userID;\n        })\n        socketRef.current.on('offer',handleRecieveCall)\n        socketRef.current.on('answer', handleAnswer)\n        socketRef.current.on('ice-candidate', handleNewICECandidateMsg)\n    },[])\n\n    function callUser(userID){\n        peerRef.current=createPeer(userID)\n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track,userStream.current))\n    }\n\n    function createPeer(userID){\n        let peer= new RTCPeerConnection({\n            iceServers:[\n                {\n                    urls:'stun:stun.stunprotocol.org'\n                },\n                {\n                    urls: 'trun:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                }\n            ]\n        })\n        peer.onicecandidate= handleICECandidateEvent\n        peer.ontrack=handleTrackEvent\n        peer.onnegotiationneeded= ()=> handleNegotiationNeededEvent(userID)\n        return peer\n    }\n    function handleNegotiationNeededEvent(userID){\n        peerRef.current.createOffer().then(offer=>{\n            return peerRef.current.setLocalDescription(offer)\n        }).then(()=>{\n                let payload={\n                    target:userID,\n                    caller: socketRef.current.id,\n                    sdp:peerRef.current.localDecscription\n                }\n                socketRef.current.emit('offer', payload)\n            }).catch(e=> console.log(e))\n        }\n        function handleRecieveCall(incoming){\n            peerRef.current = createPeer()\n            let desc = new RTCSessionDescription(incoming.sdp)\n            peerRef.current.setRemoteDescription(desc).then(()=>{\n                userStream.current.getTracks().forEach(track=> peerRef.current.addTrack(track, userStream.current))\n            }).then(() =>{\n                return peerRef.current.createAnswer()\n            }).then(answer=>{\n                return peerRef.current.setLocalDescription(answer)\n            }).then(()=>{\n                let payload={\n                    target: incoming.caller,\n                    caller: socketRef.current.id,\n                    sdp:peerRef.current.localDescription\n                }\n                socketRef.current.emit('answer', payload)\n            \n            })\n            \n            \n        }\n        function handleAnswer(message){\n            let desc= new RTCSessionDescription(message.sdp)\n            peerRef.current.setRemoteDescription(desc).catch(e=>console.log(e))\n        }\n\n        function handleICECandidateEvent(e){\n            if(e.candidate){\n                let payload={\n                    target: otherUser.current,\n                    candidate: e.candidate,\n                }\n                socketRef.current.emit('ice-candidate',payload)\n            }\n        }\n\n        function handleNewICECandidateMsg(incoming){\n            let candidate=new RTCIceCandidate(incoming)\n            peerRef.current.addIceCandidate(candidate)\n            .catch(e=> console.log(e))\n        }\n            \n       function handleTrackEvent(e){\n           partnerVideo.current.srcObject=e.streams[0]\n       }\n    \n\n    return(\n        <div>\n            <video autoPlay ref={userVideo}/>\n            <video autoPlay ref={partnerVideo}/>\n        </div>\n\n    )\n}\n\nexport default Room"]},"metadata":{},"sourceType":"module"}