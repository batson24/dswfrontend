{"ast":null,"code":"var errors = module.exports;\nvar canCapture = typeof Error.captureStackTrace === 'function';\nvar canStack = !!new Error().stack;\n/**\n * Abstract error object\n * @class ErrorAbstract\n * @access private\n * @param  {string}      [msg]         Error message\n * @param  {function}    constructor\n */\n\nfunction ErrorAbstract(msg, constructor) {\n  this.message = msg;\n  Error.call(this, this.message);\n  /* istanbul ignore else */\n\n  if (canCapture) {\n    Error.captureStackTrace(this, constructor);\n  } else if (canStack) {\n    this.stack = new Error().stack;\n  } else {\n    this.stack = '';\n  }\n}\n\nerrors._Abstract = ErrorAbstract;\nErrorAbstract.prototype = new Error();\n/**\n * FeedError\n * @class FeedError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\n\nerrors.FeedError = function FeedError(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.FeedError.prototype = new ErrorAbstract();\n/**\n * SiteError\n * @class SiteError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param  {string}  [msg]  An error message that will probably end up in a log.\n */\n\nerrors.SiteError = function SiteError(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.SiteError.prototype = new ErrorAbstract();\n/**\n * MissingSchemaError\n * @method MissingSchemaError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param  {string} msg\n */\n\nerrors.MissingSchemaError = function MissingSchemaError(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.MissingSchemaError.prototype = new ErrorAbstract();\n/**\n * StreamApiError\n * @method StreamApiError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param  {string} msg\n * @param  {object} data\n * @param  {object} response\n */\n\nerrors.StreamApiError = function StreamApiError(msg, data, response) {\n  this.error = data;\n  this.response = response;\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.StreamApiError.prototype = new ErrorAbstract();","map":{"version":3,"sources":["/Users/batson24/Desktop/Date_Site/frontend/node_modules/getstream/lib/lib/errors.js"],"names":["errors","module","exports","canCapture","Error","captureStackTrace","canStack","stack","ErrorAbstract","msg","constructor","message","call","_Abstract","prototype","FeedError","SiteError","MissingSchemaError","StreamApiError","data","response","error"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,MAAM,CAACC,OAApB;AACA,IAAIC,UAAU,GAAG,OAAOC,KAAK,CAACC,iBAAb,KAAmC,UAApD;AACA,IAAIC,QAAQ,GAAG,CAAC,CAAC,IAAIF,KAAJ,GAAYG,KAA7B;AACA;;;;;;;;AAQA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,WAA5B,EAAyC;AACvC,OAAKC,OAAL,GAAeF,GAAf;AACAL,EAAAA,KAAK,CAACQ,IAAN,CAAW,IAAX,EAAiB,KAAKD,OAAtB;AACA;;AAEA,MAAIR,UAAJ,EAAgB;AACdC,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8BK,WAA9B;AACD,GAFD,MAEO,IAAIJ,QAAJ,EAAc;AACnB,SAAKC,KAAL,GAAa,IAAIH,KAAJ,GAAYG,KAAzB;AACD,GAFM,MAEA;AACL,SAAKA,KAAL,GAAa,EAAb;AACD;AACF;;AAEDP,MAAM,CAACa,SAAP,GAAmBL,aAAnB;AACAA,aAAa,CAACM,SAAd,GAA0B,IAAIV,KAAJ,EAA1B;AACA;;;;;;;;;AASAJ,MAAM,CAACe,SAAP,GAAmB,SAASA,SAAT,CAAmBN,GAAnB,EAAwB;AACzCD,EAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyBH,GAAzB;AACD,CAFD;;AAIAT,MAAM,CAACe,SAAP,CAAiBD,SAAjB,GAA6B,IAAIN,aAAJ,EAA7B;AACA;;;;;;;;;AASAR,MAAM,CAACgB,SAAP,GAAmB,SAASA,SAAT,CAAmBP,GAAnB,EAAwB;AACzCD,EAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyBH,GAAzB;AACD,CAFD;;AAIAT,MAAM,CAACgB,SAAP,CAAiBF,SAAjB,GAA6B,IAAIN,aAAJ,EAA7B;AACA;;;;;;;;;AASAR,MAAM,CAACiB,kBAAP,GAA4B,SAASA,kBAAT,CAA4BR,GAA5B,EAAiC;AAC3DD,EAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyBH,GAAzB;AACD,CAFD;;AAIAT,MAAM,CAACiB,kBAAP,CAA0BH,SAA1B,GAAsC,IAAIN,aAAJ,EAAtC;AACA;;;;;;;;;;;AAWAR,MAAM,CAACkB,cAAP,GAAwB,SAASA,cAAT,CAAwBT,GAAxB,EAA6BU,IAA7B,EAAmCC,QAAnC,EAA6C;AACnE,OAAKC,KAAL,GAAaF,IAAb;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACAZ,EAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyBH,GAAzB;AACD,CAJD;;AAMAT,MAAM,CAACkB,cAAP,CAAsBJ,SAAtB,GAAkC,IAAIN,aAAJ,EAAlC","sourcesContent":["var errors = module.exports;\nvar canCapture = typeof Error.captureStackTrace === 'function';\nvar canStack = !!new Error().stack;\n/**\n * Abstract error object\n * @class ErrorAbstract\n * @access private\n * @param  {string}      [msg]         Error message\n * @param  {function}    constructor\n */\n\nfunction ErrorAbstract(msg, constructor) {\n  this.message = msg;\n  Error.call(this, this.message);\n  /* istanbul ignore else */\n\n  if (canCapture) {\n    Error.captureStackTrace(this, constructor);\n  } else if (canStack) {\n    this.stack = new Error().stack;\n  } else {\n    this.stack = '';\n  }\n}\n\nerrors._Abstract = ErrorAbstract;\nErrorAbstract.prototype = new Error();\n/**\n * FeedError\n * @class FeedError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\n\nerrors.FeedError = function FeedError(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.FeedError.prototype = new ErrorAbstract();\n/**\n * SiteError\n * @class SiteError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param  {string}  [msg]  An error message that will probably end up in a log.\n */\n\nerrors.SiteError = function SiteError(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.SiteError.prototype = new ErrorAbstract();\n/**\n * MissingSchemaError\n * @method MissingSchemaError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param  {string} msg\n */\n\nerrors.MissingSchemaError = function MissingSchemaError(msg) {\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.MissingSchemaError.prototype = new ErrorAbstract();\n/**\n * StreamApiError\n * @method StreamApiError\n * @access private\n * @extends ErrorAbstract\n * @memberof Stream.errors\n * @param  {string} msg\n * @param  {object} data\n * @param  {object} response\n */\n\nerrors.StreamApiError = function StreamApiError(msg, data, response) {\n  this.error = data;\n  this.response = response;\n  ErrorAbstract.call(this, msg);\n};\n\nerrors.StreamApiError.prototype = new ErrorAbstract();"]},"metadata":{},"sourceType":"script"}